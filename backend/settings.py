"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#w3v8^q@4!7i*powprxrl!mt15_&s(mn6ux=wdictd%jp_9r5j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'vorp_api.apps.VorpApiConfig',
    'corsheaders',
    'rest_framework',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',

    'vorp_api.middleware.DebugUserMiddleware',

    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'vorp',                      # The name of the database you created in PostgreSQL
        'USER': 'ray',                      # Your PostgreSQL username
        'PASSWORD': 'vorp_ray',              # Your PostgreSQL password
        'HOST': 'localhost',                         # Or the IP address of your database server
        'PORT': '5432',                              # Default PostgreSQL port
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Add this setting to tell Django how to authenticate users
AUTHENTICATION_BACKENDS = [
    'vorp_api.backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend', # Keep the default backend for admin login
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Add this at the end of the file
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",  # Your React app's address
    # "http://127.0.0.1:8080",
]

# Additionally, for Django 4.0+ you should also configure CSRF_TRUSTED_ORIGINS
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8080",
    # "http://127.0.0.1:8080",
]

# Add this line to specify your custom user model
AUTH_USER_MODEL = 'vorp_api.User'

# This tells Django it's okay to accept cookies from those origins.
CORS_ALLOW_CREDENTIALS = True

# You might also need to explicitly state which headers are allowed.
# This tells the browser that Content-Type and the CSRF token header are okay.
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
]

# This ensures the session cookie can be sent cross-site.
# Modern browsers require SameSite='None' to be paired with Secure=True.
# This works fine on localhost for modern browsers.
SESSION_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_SECURE = False 
SESSION_COOKIE_SECURE = False
# When you go to production (HTTPS), you should set these back to True.

# Add these new lines:
SESSION_COOKIE_DOMAIN = None
SESSION_COOKIE_NAME = 'sessionid'
SESSION_SAVE_EVERY_REQUEST = True

# Add this entire block
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # This is the key. It enables session-based authentication, which
        # is what you are using. It correctly handles CSRF for POST/PUT/DELETE
        # requests while allowing safe GET requests.
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # This sets a sensible default: all API endpoints require the
        # user to be authenticated unless specified otherwise.
        'rest_framework.permissions.IsAuthenticated',
    ]
}
